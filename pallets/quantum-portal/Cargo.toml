[package]
name = "pallet-quantum-portal"
version = "1.0.0-dev"
authors = ['Ferrum Network <https://github.com/ferrumnet/ferrum-network>']
edition = "2021"
homepage = "https://ferrum.network/"
publish = false
repository = "https://github.com/ferrum-network"
description = "Quantum Portal Offline worker."

[package.metadata.docs.rs]
targets = ["x86_64-unknown-linux-gnu"]

[package.metadata.substrate]
categories = [
	"pallet",
	"offchain worker",
]
[dependencies]
array-bytes = "4.1"
log = { version = "0.4.14", default-features = false }
parity-scale-codec = { default-features = false, features = ['derive'], version = '3.1.2' }
parking_lot = "0.11"
scale-info = { default-features = false, features = ['derive'], version = '2.1.2' }
serde = { version = '1.0.130', default-features = false, features = ['derive'] }
serde_json = { version = '1.0.67', default-features = false, features = ['alloc'] }

# Substrate packages
byte-slice-cast = { version = "1.2.1", default-features = false, features = [] }
ethabi-nostd = { path = "../../libraries/ethabi-nostd", default-features = false }
ethereum = { version = "0.14.0", default-features = false }
ferrum-primitives = { default-features = false, path = "../../primitives" }
frame-support = { workspace = true }
frame-system = { workspace = true }
hex = { workspace = true }
hex-literal = { workspace = true }
libsecp256k1 = { version = "0.7", default-features = false }
numtoa = { workspace = true }
rlp = { workspace = true }
sp-application-crypto = { workspace = true }
sp-arithmetic = { workspace = true }
sp-core = { workspace = true }
sp-io = { workspace = true }
sp-runtime = { workspace = true }
sp-std = { workspace = true }
tiny-keccak = { workspace = true }

[features]
default = ['std']
std = [
	'frame-support/std',
	'frame-system/std',
	'log/std',
	'parity-scale-codec/std',
	'sp-arithmetic/std',
	'sp-io/std',
	'sp-runtime/std',
	'sp-std/std',
	'sp-application-crypto/std',
	'ethabi-nostd/std',
	'scale-info/std',
	'serde/std',
	'serde_json/std',
	'sp-core/std',
	'ferrum-primitives/std',
	'ethereum/std',
	'rlp/std',
	"byte-slice-cast/std",
	"hex/std",
]
try-runtime = ["frame-support/try-runtime"]
