[package]
name = 'ferrum-runtime'
version = '0.0.1'
authors = ['Ferrum Network <https://github.com/ferrumnet/ferrum-network>']
edition = '2021'
homepage = 'https://ferrum.network'
license = 'Unlicense'
publish = false
repository = 'https://github.com/ferrumnet/ferrum-network'

[package.metadata.docs.rs]
targets = ['x86_64-unknown-linux-gnu']

[build-dependencies]
substrate-wasm-builder = { workspace = true }

[dependencies]
codec = { package = "parity-scale-codec", version = "3.2.2", default-features = false, features = ["derive"] }
hex-literal = { version = "0.3.4", optional = true }
log = { version = "0.4.17", default-features = false }
scale-info = { version = "2.3.1", default-features = false, features = ["derive"] }
smallvec = "1.10.0"

# Substrate
frame-benchmarking = { workspace = true, optional = true }
frame-executive = { workspace = true }
frame-support = { workspace = true, default-features = false }
frame-system = { workspace = true }
frame-system-benchmarking = { workspace = true }
frame-system-rpc-runtime-api = { workspace = true }
pallet-aura = { workspace = true }
pallet-authorship = { workspace = true }
pallet-balances = { workspace = true }
pallet-collective = { workspace = true }
pallet-multisig = { workspace = true }
pallet-session = { workspace = true }
pallet-sudo = { workspace = true }
pallet-timestamp = { workspace = true }
pallet-transaction-payment = { workspace = true }
pallet-transaction-payment-rpc-runtime-api = { workspace = true }
pallet-utility = { workspace = true }
sp-api = { workspace = true }
sp-block-builder = { workspace = true }
sp-consensus-aura = { workspace = true }
sp-core = { workspace = true }
sp-inherents = { workspace = true }
sp-offchain = { workspace = true }
sp-runtime = { workspace = true }
sp-session = { workspace = true }
sp-std = { workspace = true }
sp-transaction-pool = { workspace = true }
sp-version = { workspace = true }

# Polkadot
pallet-xcm = { workspace = true }
polkadot-runtime-common = { workspace = true }
xcm = { workspace = true }
xcm-builder = { workspace = true }
xcm-executor = { workspace = true }

# Cumulus
cumulus-pallet-aura-ext = { workspace = true, default-features = false }
cumulus-pallet-dmp-queue = { workspace = true, default-features = false }
cumulus-pallet-parachain-system = { workspace = true, default-features = false }
cumulus-pallet-session-benchmarking = { workspace = true, default-features = false }
cumulus-pallet-xcm = { workspace = true, default-features = false }
cumulus-pallet-xcmp-queue = { workspace = true, default-features = false }
cumulus-primitives-core = { workspace = true, default-features = false }
#cumulus-primitives-timestamp = { workspace = true, default-features = false }
polkadot-parachain-primitives = { workspace = true, default-features = false }
cumulus-primitives-utility = { workspace = true, default-features = false }
pallet-collator-selection = { workspace = true, default-features = false }
parachain-info = { workspace = true, default-features = false }

# Frontier dependencies
fp-rpc = { workspace = true }
fp-evm = { workspace = true }
fp-self-contained = { workspace = true, features = ["serde"]  }
pallet-base-fee = { workspace = true }
pallet-dynamic-fee = { workspace = true }
pallet-ethereum = { workspace = true }
pallet-evm = { workspace = true }
pallet-evm-precompile-blake2 = { workspace = true }
pallet-evm-precompile-bn128 = { workspace = true }
pallet-evm-precompile-modexp = { workspace = true }
pallet-evm-precompile-sha3fips = { workspace = true }
pallet-evm-precompile-simple = { workspace = true }
precompile-utils = { workspace = true }
cumulus-primitives-aura = { workspace = true }
pallet-message-queue = { workspace = true }
parachains-common = { workspace = true }

# Local Dependencies
ferrum-primitives = { workspace = true }
pallet-quantum-portal = { workspace = true }
pallet-transaction-pauser = { workspace = true }
pallet-evm-precompile-balances-erc20 = { workspace = true, default-features = false }
pallet-evm-precompile-quantum-portal = { default-features = false, path = "../../precompiles/quantum-portal" }

[features]
default = ["std"]
std = [
    "codec/std",
    "scale-info/std",
    "log/std",
    "frame-executive/std",
    "frame-support/std",
    "frame-system-rpc-runtime-api/std",
    "frame-system/std",
    "pallet-aura/std",
    "pallet-authorship/std",
    "pallet-balances/std",
    
    "pallet-session/std",
    "pallet-sudo/std",
    "pallet-timestamp/std",
    "pallet-transaction-payment-rpc-runtime-api/std",
    "pallet-transaction-payment/std",
    "pallet-xcm/std",
   
    "polkadot-runtime-common/std",
    "sp-api/std",
    "sp-block-builder/std",
    "sp-consensus-aura/std",
    "sp-core/std",
    "sp-inherents/std",
    "sp-offchain/std",
    "sp-runtime/std",
    "sp-session/std",
    "sp-std/std",
    "sp-transaction-pool/std",
    "sp-version/std",
    "xcm-builder/std",
    "xcm-executor/std",
    "xcm/std",
    "pallet-ethereum/std",
    "pallet-evm/std",
    "pallet-dynamic-fee/std",
    "pallet-base-fee/std",
    "pallet-evm-precompile-simple/std",
    "pallet-evm-precompile-sha3fips/std",
    "fp-rpc/std",
    "fp-self-contained/std",
    "pallet-multisig/std",
    "pallet-utility/std",
    "pallet-collective/std",
    "fp-evm/std",
    "pallet-evm-precompile-blake2/std",
    "pallet-evm-precompile-bn128/std",
    "pallet-evm-precompile-modexp/std",
    "precompile-utils/std",
	"cumulus-primitives-utility/std",
	"pallet-collator-selection/std",
	"cumulus-primitives-core/std",
	#"cumulus-primitives-timestamp/std",
	"cumulus-primitives-utility/std",
	"cumulus-pallet-session-benchmarking/std",
	"cumulus-pallet-aura-ext/std",
	"cumulus-pallet-dmp-queue/std",
	"cumulus-pallet-parachain-system/std",
	"cumulus-pallet-xcm/std",
	"cumulus-pallet-xcmp-queue/std",
	"frame-benchmarking?/std",
	"frame-system-benchmarking/std",
	"parachain-info/std",
    "cumulus-primitives-aura/std",
    "pallet-message-queue/std",
    "pallet-quantum-portal/std",
    "ferrum-primitives/std",
	"pallet-transaction-pauser/std",
    "polkadot-parachain-primitives/std",
    "parachains-common/std",
	"pallet-evm-precompile-balances-erc20/std",
    "pallet-evm-precompile-blake2/std",
    "pallet-evm-precompile-bn128/std",
    "pallet-evm-precompile-modexp/std",
    "pallet-evm-precompile-sha3fips/std",
    "pallet-multisig/std",
    "pallet-utility/std",
    "pallet-collective/std",
    "pallet-evm-precompile-quantum-portal/std",
]

runtime-benchmarks = [
	"hex-literal",
	"frame-benchmarking/runtime-benchmarks",
	"frame-support/runtime-benchmarks",
	"frame-system-benchmarking/runtime-benchmarks",
	"frame-system/runtime-benchmarks",
	"pallet-balances/runtime-benchmarks",
	"pallet-collator-selection/runtime-benchmarks",
	"pallet-timestamp/runtime-benchmarks",
	"pallet-xcm/runtime-benchmarks",
	"sp-runtime/runtime-benchmarks",
	"xcm-builder/runtime-benchmarks",
	"cumulus-pallet-session-benchmarking/runtime-benchmarks",
	"cumulus-pallet-xcmp-queue/runtime-benchmarks",
]

try-runtime = [
	"cumulus-pallet-aura-ext/try-runtime",
	"cumulus-pallet-dmp-queue/try-runtime",
	"cumulus-pallet-parachain-system/try-runtime",
	"cumulus-pallet-xcm/try-runtime",
	"cumulus-pallet-xcmp-queue/try-runtime",
	"frame-executive/try-runtime",
	"frame-system/try-runtime",
	"pallet-aura/try-runtime",
	"pallet-authorship/try-runtime",
	"pallet-balances/try-runtime",
	"pallet-collator-selection/try-runtime",
	"pallet-session/try-runtime",
	"pallet-sudo/try-runtime",
	"pallet-timestamp/try-runtime",
	"pallet-transaction-payment/try-runtime",
	"pallet-xcm/try-runtime",
	"parachain-info/try-runtime",
]
